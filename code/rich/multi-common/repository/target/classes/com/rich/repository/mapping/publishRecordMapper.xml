<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rich.repository.dao.publishRecordMapper">
  <resultMap id="BaseResultMap" type="com.rich.repository.entity.publishRecord">
    <id column="publish_ID" jdbcType="INTEGER" property="publishId" />
    <result column="User_ID" jdbcType="VARCHAR" property="userId" />
    <result column="Sort_ID" jdbcType="INTEGER" property="sortId" />
    <result column="Person_ID" jdbcType="INTEGER" property="personId" />
    <result column="publish_Type" jdbcType="SMALLINT" property="publishType" />
    <result column="Content" jdbcType="VARCHAR" property="content" />
    <result column="images01" jdbcType="VARCHAR" property="images01" />
    <result column="images02" jdbcType="VARCHAR" property="images02" />
    <result column="images03" jdbcType="VARCHAR" property="images03" />
    <result column="CreatedOn" jdbcType="TIMESTAMP" property="createdon" />
    <result column="VerifiedOn" jdbcType="TIMESTAMP" property="verifiedon" />
    <result column="Error_Message" jdbcType="VARCHAR" property="errorMessage" />
    <result column="publishOn" jdbcType="TIMESTAMP" property="publishon" />
    <result column="Status" jdbcType="SMALLINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    publish_ID, User_ID, Sort_ID, Person_ID, publish_Type, Content, images01, images02, 
    images03, CreatedOn, VerifiedOn, Error_Message, publishOn, Status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from publishrecord
    where publish_ID = #{publishId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from publishrecord
    where publish_ID = #{publishId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rich.repository.entity.publishRecord">
    insert into publishrecord (publish_ID, User_ID, Sort_ID, 
      Person_ID, publish_Type, Content, 
      images01, images02, images03, 
      CreatedOn, VerifiedOn, Error_Message, 
      publishOn, Status)
    values (#{publishId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{sortId,jdbcType=INTEGER}, 
      #{personId,jdbcType=INTEGER}, #{publishType,jdbcType=SMALLINT}, #{content,jdbcType=VARCHAR}, 
      #{images01,jdbcType=VARCHAR}, #{images02,jdbcType=VARCHAR}, #{images03,jdbcType=VARCHAR}, 
      #{createdon,jdbcType=TIMESTAMP}, #{verifiedon,jdbcType=TIMESTAMP}, #{errorMessage,jdbcType=VARCHAR}, 
      #{publishon,jdbcType=TIMESTAMP}, #{status,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.rich.repository.entity.publishRecord">
    insert into publishrecord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="publishId != null">
        publish_ID,
      </if>
      <if test="userId != null">
        User_ID,
      </if>
      <if test="sortId != null">
        Sort_ID,
      </if>
      <if test="personId != null">
        Person_ID,
      </if>
      <if test="publishType != null">
        publish_Type,
      </if>
      <if test="content != null">
        Content,
      </if>
      <if test="images01 != null">
        images01,
      </if>
      <if test="images02 != null">
        images02,
      </if>
      <if test="images03 != null">
        images03,
      </if>
      <if test="createdon != null">
        CreatedOn,
      </if>
      <if test="verifiedon != null">
        VerifiedOn,
      </if>
      <if test="errorMessage != null">
        Error_Message,
      </if>
      <if test="publishon != null">
        publishOn,
      </if>
      <if test="status != null">
        Status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="publishId != null">
        #{publishId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="sortId != null">
        #{sortId,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="publishType != null">
        #{publishType,jdbcType=SMALLINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="images01 != null">
        #{images01,jdbcType=VARCHAR},
      </if>
      <if test="images02 != null">
        #{images02,jdbcType=VARCHAR},
      </if>
      <if test="images03 != null">
        #{images03,jdbcType=VARCHAR},
      </if>
      <if test="createdon != null">
        #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="verifiedon != null">
        #{verifiedon,jdbcType=TIMESTAMP},
      </if>
      <if test="errorMessage != null">
        #{errorMessage,jdbcType=VARCHAR},
      </if>
      <if test="publishon != null">
        #{publishon,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rich.repository.entity.publishRecord">
    update publishrecord
    <set>
      <if test="userId != null">
        User_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="sortId != null">
        Sort_ID = #{sortId,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        Person_ID = #{personId,jdbcType=INTEGER},
      </if>
      <if test="publishType != null">
        publish_Type = #{publishType,jdbcType=SMALLINT},
      </if>
      <if test="content != null">
        Content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="images01 != null">
        images01 = #{images01,jdbcType=VARCHAR},
      </if>
      <if test="images02 != null">
        images02 = #{images02,jdbcType=VARCHAR},
      </if>
      <if test="images03 != null">
        images03 = #{images03,jdbcType=VARCHAR},
      </if>
      <if test="createdon != null">
        CreatedOn = #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="verifiedon != null">
        VerifiedOn = #{verifiedon,jdbcType=TIMESTAMP},
      </if>
      <if test="errorMessage != null">
        Error_Message = #{errorMessage,jdbcType=VARCHAR},
      </if>
      <if test="publishon != null">
        publishOn = #{publishon,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        Status = #{status,jdbcType=SMALLINT},
      </if>
    </set>
    where publish_ID = #{publishId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rich.repository.entity.publishRecord">
    update publishrecord
    set User_ID = #{userId,jdbcType=VARCHAR},
      Sort_ID = #{sortId,jdbcType=INTEGER},
      Person_ID = #{personId,jdbcType=INTEGER},
      publish_Type = #{publishType,jdbcType=SMALLINT},
      Content = #{content,jdbcType=VARCHAR},
      images01 = #{images01,jdbcType=VARCHAR},
      images02 = #{images02,jdbcType=VARCHAR},
      images03 = #{images03,jdbcType=VARCHAR},
      CreatedOn = #{createdon,jdbcType=TIMESTAMP},
      VerifiedOn = #{verifiedon,jdbcType=TIMESTAMP},
      Error_Message = #{errorMessage,jdbcType=VARCHAR},
      publishOn = #{publishon,jdbcType=TIMESTAMP},
      Status = #{status,jdbcType=SMALLINT}
    where publish_ID = #{publishId,jdbcType=INTEGER}
  </update>
</mapper>